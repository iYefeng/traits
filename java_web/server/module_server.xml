<?xml version="1.0" encoding="UTF-8"?>
<project name="module_server" default="compile.module.server">
  <dirname property="module.server.basedir" file="${ant.file.module_server}"/>
  
  <property name="module.jdk.home.server" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.server" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.server" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.server" value="-encoding UTF-8 -source 1.5 -target 1.5 ${compiler.args}"/>
  
  <property name="server.output.dir" value="${module.server.basedir}/target/classes"/>
  <property name="server.testoutput.dir" value="${module.server.basedir}/target/test-classes"/>
  
  <path id="server.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="server.module.production.classpath">
    <path refid="${module.jdk.classpath.server}"/>
    <path refid="library.maven:_org.eclipse.jetty.aggregate:jetty-all:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_javax.websocket:javax.websocket-api:1.0.classpath"/>
    <path refid="library.maven:_javax.servlet:javax.servlet-api:3.1.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty:jetty-jsp:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.toolchain:jetty-schemas:3.1.m0.classpath"/>
    <path refid="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.1.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp:2.3.2.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:javax.servlet.jsp.jstl:1.2.0.v201105211821.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp.jstl:1.2.2.classpath"/>
    <path refid="library.maven:_org.glassfish:javax.el:3.0.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:org.eclipse.jdt.core:3.8.2.v20130121.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.21.classpath"/>
  </path>
  
  <path id="server.runtime.production.module.classpath">
    <pathelement location="${server.output.dir}"/>
    <path refid="library.maven:_org.eclipse.jetty.aggregate:jetty-all:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_javax.websocket:javax.websocket-api:1.0.classpath"/>
    <path refid="library.maven:_javax.servlet:javax.servlet-api:3.1.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty:jetty-jsp:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.toolchain:jetty-schemas:3.1.m0.classpath"/>
    <path refid="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.1.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp:2.3.2.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:javax.servlet.jsp.jstl:1.2.0.v201105211821.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp.jstl:1.2.2.classpath"/>
    <path refid="library.maven:_org.glassfish:javax.el:3.0.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:org.eclipse.jdt.core:3.8.2.v20130121.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.21.classpath"/>
  </path>
  
  <path id="server.module.classpath">
    <path refid="${module.jdk.classpath.server}"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="library.maven:_org.eclipse.jetty.aggregate:jetty-all:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_javax.websocket:javax.websocket-api:1.0.classpath"/>
    <path refid="library.maven:_javax.servlet:javax.servlet-api:3.1.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty:jetty-jsp:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.toolchain:jetty-schemas:3.1.m0.classpath"/>
    <path refid="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.1.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp:2.3.2.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:javax.servlet.jsp.jstl:1.2.0.v201105211821.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp.jstl:1.2.2.classpath"/>
    <path refid="library.maven:_org.glassfish:javax.el:3.0.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:org.eclipse.jdt.core:3.8.2.v20130121.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.21.classpath"/>
  </path>
  
  <path id="server.runtime.module.classpath">
    <pathelement location="${server.testoutput.dir}"/>
    <pathelement location="${server.output.dir}"/>
    <path refid="library.maven:_org.eclipse.jetty.aggregate:jetty-all:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_javax.websocket:javax.websocket-api:1.0.classpath"/>
    <path refid="library.maven:_javax.servlet:javax.servlet-api:3.1.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty:jetty-jsp:9.2.16.v20160414.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.toolchain:jetty-schemas:3.1.m0.classpath"/>
    <path refid="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.1.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp:2.3.2.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:javax.servlet.jsp.jstl:1.2.0.v201105211821.classpath"/>
    <path refid="library.maven:_org.glassfish.web:javax.servlet.jsp.jstl:1.2.2.classpath"/>
    <path refid="library.maven:_org.glassfish:javax.el:3.0.0.classpath"/>
    <path refid="library.maven:_org.eclipse.jetty.orbit:org.eclipse.jdt.core:3.8.2.v20130121.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.21.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.server">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.server">
    <patternset refid="excluded.from.module.server"/>
  </patternset>
  
  <path id="server.module.sourcepath">
    <dirset dir="${module.server.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="server.module.test.sourcepath">
    <dirset dir="${module.server.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.server" depends="compile.module.server.production,compile.module.server.tests" description="Compile module server"/>
  
  <target name="compile.module.server.production" depends="register.custom.compilers" description="Compile module server; production classes">
    <mkdir dir="${server.output.dir}"/>
    <javac2 destdir="${server.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.server}/javac">
      <compilerarg line="${compiler.args.server}"/>
      <bootclasspath refid="server.module.bootclasspath"/>
      <classpath refid="server.module.production.classpath"/>
      <src refid="server.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.server"/>
    </javac2>
    
    <copy todir="${server.output.dir}">
      <fileset dir="${module.server.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.server.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.server.tests" depends="register.custom.compilers,compile.module.server.production" description="compile module server; test classes" unless="skip.tests">
    <mkdir dir="${server.testoutput.dir}"/>
    <javac2 destdir="${server.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.server}/javac">
      <compilerarg line="${compiler.args.server}"/>
      <bootclasspath refid="server.module.bootclasspath"/>
      <classpath refid="server.module.classpath"/>
      <src refid="server.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.server"/>
    </javac2>
    
    <copy todir="${server.testoutput.dir}">
      <fileset dir="${module.server.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.server" description="cleanup module">
    <delete dir="${server.output.dir}"/>
    <delete dir="${server.testoutput.dir}"/>
  </target>
</project>